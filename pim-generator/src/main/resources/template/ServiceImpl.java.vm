package ${package}.${moduleName}.service.impl;

import com.lyshop.datasource.annotation.DataSource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Map;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import ${mainPath}.common.utils.PageUtils;
import ${mainPath}.common.utils.Query;

import ${package}.${moduleName}.dao.${className}Dao;
import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;


@Service("${classname}Service")
    #if(${dataSource})
    @DataSource("${dataSource}")
    #end
public class ${className}ServiceImpl extends ServiceImpl<${className}Dao, ${className}Entity> implements ${className}Service {

    @Autowired
    private ${className}Dao ${classname}Dao;

    @Override
    public PageUtils queryPage(Map<String, Object> params) {
        IPage<${className}Entity> page = this.page(
                new Query<${className}Entity>().getPage(params),
                new QueryWrapper<${className}Entity>()
        );

        return new PageUtils(page);
    }

    @Override
    public Integer save${className}(${className}Entity ${classname}Entity) {
        return ${classname}Dao.save${className}(${classname}Entity);
    }

    @Override
    public Integer update${className}(${className}Entity ${classname}Entity) {
        return ${classname}Dao.update${className}(${classname}Entity);
    }
}